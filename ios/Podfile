platform :ios, '14.0'
install! 'cocoapods', :deterministic_uuids => false

def resolve_flutter_root
  root = ENV['FLUTTER_ROOT']
  return root unless root.nil? || root.empty?
  machine = `flutter --version --machine 2>/dev/null`
  if $?.success? && machine && machine.include?('"flutterRoot"')
    match = machine.match(/"flutterRoot"\s*:\s*"([^"]+)"/)
    return match[1] if match
  end
  raise 'Unable to resolve FLUTTER_ROOT. Set ENV FLUTTER_ROOT or ensure `flutter` is on PATH.'
end
flutter_root = resolve_flutter_root
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

use_frameworks! :linkage => :static

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_ios_podfile_setup
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  # 統一所有 Pods 的 Deployment Target 到 14.0
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
    end
  end

  # 兼容新舊 Flutter
  if defined?(flutter_post_install)
    flutter_post_install(installer)
  else
    installer.pods_project.targets.each do |t|
      flutter_additional_ios_build_settings(t)
    end
  end
end